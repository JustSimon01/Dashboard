{"version":3,"file":"static/js/958.9442fd46.chunk.js","mappings":"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","sources":["views/app-views/main/draganddrop/Draggable.js","webpack://emilus/./src/views/app-views/main/draganddrop/Droppable.module.css?c1d8","views/app-views/main/draganddrop/Droppable.js","views/app-views/main/draganddrop/index.js","utils/helpers/jsonUpload.js","utils/helpers/jsonDownload.js"],"sourcesContent":["import React from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport vaseImg from 'assets/png/vase.png';\r\nimport tableImg from 'assets/png/table.png';\r\nimport chairImg from 'assets/png/chair.png';\r\n\r\nconst Draggable = ({ data }) => {\r\n  const { _id, id, type, x, y } = data;\r\n  const [{ isDragging }, dragRef] = useDrag({\r\n    type: \"box\",\r\n    item: { _id, id, type, x, y },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n      clientOffset: monitor.getClientOffset()\r\n    })\r\n  });\r\n\r\n  const getImageByType = (type) => {\r\n    switch (type) {\r\n      case 'VASE':\r\n        return vaseImg;\r\n      case 'TABLE':\r\n        return tableImg;\r\n      case 'CHAIR':\r\n        return chairImg;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const blockSideLength = 50;\r\n\r\n  const gridStyle = {\r\n    width: blockSideLength,\r\n    height: blockSideLength,\r\n    cursor: 'grab',\r\n    opacity: isDragging ? 0.5 : 1\r\n  };\r\n\r\n  const dropStyle = {\r\n    width: blockSideLength,\r\n    height: blockSideLength,\r\n    position: 'absolute',\r\n    top: y - blockSideLength / 2,\r\n    left: x - blockSideLength / 2,\r\n    cursor: 'move',\r\n    opacity: isDragging ? 0.5 : 1\r\n  };\r\n\r\n  return (\r\n    !x\r\n      ? <img src={getImageByType(type)} alt={type} ref={dragRef} style={gridStyle} />\r\n      : <img src={getImageByType(type)} alt={type} ref={dragRef} style={dropStyle} />\r\n  );\r\n};\r\n\r\nexport default Draggable;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"gridStyle\":\"Droppable_gridStyle__VjRPV\"};","import { Card, Space } from \"antd\";\r\nimport React, { useRef } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport styles from \"./Droppable.module.css\"\r\n\r\nconst Droppable = ({ children, onDrop }) => {\r\n  const dropTargetRef = useRef(null);\r\n  const [, dropTarget] = useDrop({\r\n    accept: \"box\",\r\n    drop(itemId, monitor) {\r\n      const currentClientOffset = monitor.getClientOffset();\r\n      let x = 0;\r\n      let y = 0;\r\n      if (currentClientOffset) {\r\n        const containerRect = dropTargetRef.current.getBoundingClientRect();\r\n        const deltaX = Math.round(currentClientOffset.x - containerRect.left);\r\n        const deltaY = Math.round(currentClientOffset.y - containerRect.top);\r\n        x = deltaX;\r\n        y = deltaY;\r\n      }\r\n      onDrop({ ...itemId, x: x, y: y });\r\n    }\r\n  });\r\n\r\n  const dropContainer = {\r\n    width: '600px',\r\n    height: '500px',\r\n    position: \"relative\"\r\n  };\r\n\r\n  return (\r\n    <div className={styles.gridStyle} ref={dropTarget(dropTargetRef)}>\r\n      <Card style={dropContainer}>\r\n        <Space wrap='true'>\r\n          {children}\r\n        </Space>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Droppable;\r\n","import React, { useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Card, Table, Tag, Tooltip, message, Upload, Button, Space } from 'antd';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport Draggable from './Draggable';\r\nimport Droppable from './Droppable';\r\nimport handleDownload from 'utils/helpers/jsonDownload';\r\nimport handleUpload from 'utils/helpers/jsonUpload';\r\nimport items from 'assets/data/items.data.json'\r\n\r\nconst dropContainer = {\r\n  width: '600px',\r\n  height: '500px',\r\n};\r\n\r\nconst itemsContainer = {\r\n  width: '600px',\r\n  overflowX: 'scroll',\r\n  whiteSpace: 'nowrap',\r\n};\r\n\r\nexport const DragAndDropContainer = () => {\r\n  const [dragableElements, setdragableElements] = React.useState(items);\r\n\r\n  const [elements, setElements] = React.useState([]);\r\n\r\n  const handleDrop = (itemId) => {\r\n    setElements((prevElements) => {\r\n      const updatedItemId = { ...itemId, _id: uuidv4() }\r\n      const updatedElements = prevElements.filter((element) => element._id !== itemId._id)\r\n      return [...updatedElements, updatedItemId]\r\n    });\r\n  };\r\n\r\n  const customRequest = ({ file, onSuccess }) => {\r\n    onSuccess('ok')\r\n  };\r\n\r\n  const clearElements = () => {\r\n    setElements([])\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DndProvider backend={HTML5Backend}>\r\n        <Space>\r\n          <Card style={itemsContainer} title=\"Объекты\">\r\n            <Space>\r\n              {dragableElements.map((item) => <Draggable key={uuidv4()} data={item} />)}\r\n            </Space>\r\n          </Card>\r\n\r\n          <Space direction=\"vertical\">\r\n            <Upload showUploadList={false} customRequest={customRequest} onChange={(info) => {\r\n              const { file } = info;\r\n              handleUpload(file.originFileObj, setElements);\r\n            }}>\r\n              <Button type=\"primary\">Загрузить схему</Button>\r\n            </Upload>\r\n\r\n            <Button type=\"primary\" onClick={() => handleDownload(elements)}>Выгрузить схему</Button>\r\n            <Button type=\"primary\" onClick={clearElements}>Очистить схему</Button>\r\n          </Space>\r\n\r\n        </Space>\r\n\r\n        <Droppable style={dropContainer} onDrop={handleDrop}>\r\n          {elements.map((item) => { return <Draggable key={uuidv4()} data={item} /> }\r\n          )}\r\n        </Droppable>\r\n      </DndProvider>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default DragAndDropContainer;\r\n","export default function handleUpload(file, setElementsFn) {\r\n  if (file) {\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const jsonData = JSON.parse(event.target.result);\r\n      setElementsFn(jsonData);\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n};\r\n","export default function handleDownload(elements) {\r\n  const jsonData = JSON.stringify(elements, null, 2)\r\n  const blob = new Blob([jsonData], { type: 'application/json' })\r\n  const url = URL.createObjectURL(blob)\r\n  const link = document.createElement('a')\r\n  link.href = url\r\n  link.download = 'schema.json'\r\n  link.click()\r\n  URL.revokeObjectURL(url)\r\n};\r\n\r\n"],"names":["data","_id","id","type","x","y","useDrag","item","collect","monitor","isDragging","clientOffset","getClientOffset","dragRef","getImageByType","blockSideLength","gridStyle","width","height","cursor","opacity","dropStyle","position","top","left","src","alt","ref","style","children","onDrop","dropTargetRef","useRef","useDrop","accept","drop","itemId","currentClientOffset","containerRect","current","getBoundingClientRect","Math","round","dropTarget","className","styles","wrap","dropContainer","itemsContainer","overflowX","whiteSpace","DragAndDropContainer","React","items","dragableElements","elements","setElements","DndProvider","backend","HTML5Backend","title","map","uuidv4","direction","showUploadList","customRequest","file","onSuccess","onChange","info","setElementsFn","reader","FileReader","onload","event","jsonData","JSON","parse","target","result","readAsText","handleUpload","originFileObj","onClick","stringify","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","handleDownload","prevElements","updatedItemId","updatedElements","filter","element"],"sourceRoot":""}