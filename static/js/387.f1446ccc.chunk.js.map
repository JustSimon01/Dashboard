{"version":3,"file":"static/js/387.f1446ccc.chunk.js","mappings":"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","sources":["constants/ApiConstant.js","views/app-views/main/clients/list/UserView.js","components/shared-components/AvatarStatus/index.js","views/app-views/main/clients/list/index.js"],"sourcesContent":["export const API_BASE_URL = 'https://your-api-url.com/'\r\nexport const API_JSON_PLACE_HOLDER = 'https://jsonplaceholder.typicode.com/'\r\n","import React, { Component } from 'react';\r\nimport { Avatar, Drawer, Divider } from 'antd';\r\nimport {\r\n\tMobileOutlined,\r\n\tMailOutlined,\r\n\tUserOutlined,\r\n\tCompassOutlined,\r\n\tChromeOutlined,\r\n} from '@ant-design/icons';\r\n\r\nexport class UserView extends Component {\r\n\trender() {\r\n\t\tconst { data, visible, close } = this.props;\r\n\t\treturn (\r\n\t\t\t<Drawer\r\n\t\t\t\twidth={300}\r\n\t\t\t\tplacement=\"right\"\r\n\t\t\t\tonClose={close}\r\n\t\t\t\tclosable={false}\r\n\t\t\t\topen={visible}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"text-center mt-3\">\r\n\t\t\t\t\t<Avatar size={80} src={'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'} />\r\n\t\t\t\t\t<h3 className=\"mt-2 mb-0\">{data?.name}</h3>\r\n\t\t\t\t\t<span className=\"text-muted\">{data?.username}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Divider dashed />\r\n\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t<h6 className=\"text-muted text-uppercase mb-3\">Account details</h6>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">id: {data?.id}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<ChromeOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">website {data?.website}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mt-5\">\r\n\t\t\t\t\t<h6 className=\"text-muted text-uppercase mb-3\">CONTACT</h6>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<MobileOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">{data?.phone}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<MailOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">{data?.email}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<CompassOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">{data?.address.city}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Drawer>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default UserView\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, { Component, useMemo, useState, useEffect } from 'react'\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { Card, Table, Tag, Tooltip, message, Button } from 'antd';\r\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport dayjs from 'dayjs';\r\nimport UserView from './UserView';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport userData from \"assets/data/user-list.data.json\";\r\nimport ApiService from 'services/ApiService';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { fetchUsers } from 'store/slices/usersSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteUser } from 'store/slices/usersSlice';\r\nimport { setUserInfo } from 'store/slices/userInfoSlice';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_JSON_PLACE_HOLDER } from 'constants/ApiConstant';\r\n\r\n\r\n\r\nconst UserList = () => {\r\n\tconst [userProfileVisible, setUserProfileVisible] = useState(false);\r\n\tconst [selectedUser, setSelectedUser] = useState(null);\r\n\tconst request = {\r\n\t\turl: `${API_JSON_PLACE_HOLDER}users`,\r\n\t\tmethod: 'GET',\r\n\t\tdata: ''\r\n\t}\r\n\tconst users = useSelector((state) => state.users.users);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseMemo(() => {\r\n\t\t//эмулируем задержку сервера\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch(fetchUsers(request));\r\n\t\t}, 1000)\r\n\t}, []);\r\n\r\n\tconst removeUser = userId => {\r\n\t\tdispatch(deleteUser(userId))\r\n\t\tmessage.success({ content: `Удален пользователь ${userId}`, duration: 2 })\r\n\t}\r\n\r\n\tconst showUserProfile = (userInfo) => {\r\n\t\tsetUserProfileVisible(true);\r\n\t\tsetSelectedUser(userInfo)\r\n\t};\r\n\r\n\tconst closeUserProfile = () => {\r\n\t\tsetUserProfileVisible(false);\r\n\t\tsetSelectedUser(null)\r\n\t}\r\n\r\n\tconst tableColumns = [\r\n\t\t{\r\n\t\t\ttitle: 'Пользователь',\r\n\t\t\tdataIndex: 'name',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t<Link to='/app/main/clients/list/editprofile' onClick={() => dispatch(setUserInfo(record))}>\r\n\t\t\t\t\t\t<AvatarStatus text={record.name.replace(/[^A-Z]/g, '')} type=\"blue\" name={record.name} subTitle={record.email} />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div >\r\n\t\t\t),\r\n\t\t\tsorter: {\r\n\t\t\t\tcompare: (a, b) => {\r\n\t\t\t\t\ta = a.name.toLowerCase();\r\n\t\t\t\t\tb = b.name.toLowerCase();\r\n\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Логин',\r\n\t\t\tdataIndex: 'username',\r\n\t\t\tsorter: {\r\n\t\t\t\tcompare: (a, b) => {\r\n\t\t\t\t\ta = a.username.toLowerCase();\r\n\t\t\t\t\tb = b.username.toLowerCase();\r\n\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Город проживания',\r\n\t\t\tdataIndex: ['address', 'city'],\r\n\t\t\tsorter: {\r\n\t\t\t\tcompare: (a, b) => {\r\n\t\t\t\t\ta = a.address.city.toLowerCase();\r\n\t\t\t\t\tb = b.address.city.toLowerCase();\r\n\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Место работы',\r\n\t\t\tdataIndex: ['company', 'name'],\r\n\t\t\tsorter: {\r\n\t\t\t\tcompare: (a, b) => {\r\n\t\t\t\t\ta = a.company.name.toLowerCase();\r\n\t\t\t\t\tb = b.company.name.toLowerCase();\r\n\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\tdataIndex: 'actions',\r\n\t\t\trender: (_, elm) => (\r\n\t\t\t\t<div className=\"text-right d-flex justify-content-end\">\r\n\t\t\t\t\t<Tooltip title=\"View\">\r\n\t\t\t\t\t\t<Button type=\"primary\" className=\"mr-2\" icon={<EyeOutlined />} onClick={() => showUserProfile(elm)} size=\"small\" />\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t<Tooltip title=\"Delete\">\r\n\t\t\t\t\t\t<Button danger icon={<DeleteOutlined />} onClick={() => removeUser(elm.id)} size=\"small\" />\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t];\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!users\r\n\t\t\t\t? <Loading align='center' cover='content' />\r\n\t\t\t\t: <Card bodyStyle={{ 'padding': '0px' }}>\r\n\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t<Table columns={tableColumns} dataSource={users} rowKey='id' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<UserView data={selectedUser} visible={userProfileVisible} close={() => closeUserProfile()} />\r\n\t\t\t\t</Card>\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n\r\nexport default UserList;\r\n"],"names":["API_JSON_PLACE_HOLDER","UserView","this","props","data","visible","close","width","placement","onClose","closable","open","className","size","src","name","username","dashed","UserOutlined","id","ChromeOutlined","website","MobileOutlined","phone","MailOutlined","email","CompassOutlined","address","city","Component","renderAvatar","type","text","suffix","subTitle","icon","shape","gap","onNameClick","onClick","useState","userProfileVisible","setUserProfileVisible","selectedUser","setSelectedUser","request","url","method","users","useSelector","state","dispatch","useDispatch","useMemo","setTimeout","fetchUsers","tableColumns","title","dataIndex","render","_","record","to","setUserInfo","replace","sorter","compare","a","b","toLowerCase","company","elm","EyeOutlined","userInfo","danger","DeleteOutlined","userId","deleteUser","message","content","duration","bodyStyle","columns","dataSource","rowKey","Loading","align","cover"],"sourceRoot":""}